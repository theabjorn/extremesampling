% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eps_AC_testGE.R
\name{epsAC.test.GE}
\alias{epsAC.test.GE}
\title{Test for gene-environment associations under the EPS-AC design}
\usage{
epsAC.test.GE(nullmodel, G, E, confounder)
}
\arguments{
\item{nullmodel}{an object of class \code{\link[stats]{formula}}, that
describes the linear regression model under the null hypothesis
(including the genetic covariate)}

\item{G}{The genetic covariate in the GE interaction}

\item{E}{The environmental covariate in the GE interaction}

\item{confounder}{(optional) vector of names of confounding (non-genetic) covariates}
}
\value{
\code{epsAC.testGE} returns
\item{statistic}{thescore test statistic}
\item{p.value}{the P-value}
}
\description{
\code{epsAC.test.GE} performs a likelihood ratio test for gene-environment
interaction variables under the EPS-AC design
}
\details{
The \code{nullmodel} \code{\link[stats]{formula}} object is of the type
y~xe+xg, which describes a regression model, y=a+be*xe+bg*xg+e
assuming a normal distribution for the residuals (e). The covariate
xe is a non-genetic/environmental covariate (optional).
The covariate xg is one or more, genetic markers where missing values
are coded as NA. Missing-mechanism must be MCAR or MAR.

Confounders are discrete covariates (xe) and the distribution of xg is
modelled for each level of unique value of xe.

The test considers a regression model y=a+be*xe+bg*xg+b*xe*xg+e,
where b=0 under the null hypothesis. The output
of the function gives the test statistic and p-value for the test of
H0: b=0. The genetic covarite (G) and the environmental covariate (E) for
the interaction must be specified, G with missing values coded as NA and
E with no missing values. G must also be included in the null model.
}
\examples{
N = 5000 # Number of individuals in a population
xe1 = rnorm(n = N, mean = 2, sd = 1) # Environmental covariate
xe2 = rbinom(n = N, size = 1, prob = 0.3) # Environmental covariate
xg1 = sample(c(0,1,2),N,c(0.4,0.3,0.3), replace = TRUE) # xg
# Model parameters
a = 50; be1 = 5; be2 = 8; bg1 = 0.3; bg2 = 0.6; sigma = 2
# Generate response y
y = rnorm(N, mean = a + be1*xe1 + be2*xe2 + bg1*xg1, sd = sigma)
# Identify extremes, here upper and lower 25\% of population
u = quantile(y,probs = 3/4,na.rm=TRUE)
l = quantile(y,probs = 1/4,na.rm=TRUE)
extreme = (y < l) | (y >= u)
# Create the EPS-AC data set by setting
# the xg values of non-extremes to NA
xg1[!extreme] = NA
nullmodel = y~xe1+xe2+g1
epsAC.test.GE(nullmodel, G = g1, E = xe1)
}
