% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epsfulltest.R
\name{epsfull.test}
\alias{epsfull.test}
\title{Test for associations under the EPS-full design}
\usage{
epsfull.test(nullmodel, SNP, onebyone = TRUE, confounder = FALSE, cx)
}
\arguments{
\item{nullmodel}{an object of class \code{\link[stats]{formula}}, that
describes the linear regression model under the null hypothesis, see details}

\item{SNP}{a matrix of variables to be tested against the null}

\item{onebyone}{\code{TRUE} if genetic variables should be tested one by one
for inclusion in the model, default \code{TRUE}}

\item{confounder}{\code{TRUE} if distribution of SNPs should be
assumed dependent on other (non-genetic) covariates,
default set to \code{FALSE}}

\item{cx}{optional vector of names of confounding (non-genetic) covariates}
}
\value{
\code{epsfull.test} returns
\item{statistic}{the value of the score test statistic}
\item{parameter}{the degrees of freedom of the statistic}
\item{p.value}{the P-value for the test}
}
\description{
\code{epsfull.test} performs a score test for genetic variables in
the EPS-full design
}
\details{
The \code{nullmodel} \code{\link[stats]{formula}} object is of the type
y~xe, which describes a regression model, y=a+be*xe+e
assuming a normal distribution for the residuals (e). The covariate
xe is a non-genetic/environmental covariate (optional).
The variables are taken from the environment that the
function is called from.
The test considers a regression model y=a+be*xe+bg*xg+e, where xg is a
genetic covariate, and where bg=0 under the null hypothesis. The output
of the function gives the test statistic and p-value for the test of
H0: bg=0.
The covariate \code{xg} is a SNP (single-nucleotide polymorphism).
Both xe and xg can be matrices.

The EPS-full design is such that the SNP genotype is only observed
for individuals with high and low values of the phenotype \code{y}.
For remaining individuals, the unobserved genotype most be coded as NA.
A SNP is assumed to have possible genotype 0, 1 or 2 according to the
number of minor-alleles.

If confounder = TRUE, the genetic variables are assumed to have
different distribution for different levels of other (non-genetic)
covariates, these can be specified by a vector of names \code{cx}.
}
\examples{
N = 5000 # Number of individuals in a population
xe1 = rnorm(n = N, mean = 2, sd = 1) # Environmental covariate
xe2 = rbinom(n = N, size = 1, prob = 0.3) # Environmental covariate
xg1 = sample(c(0,1,2),N,c(0.4,0.3,0.3), replace = TRUE) # SNP
xg2 = sample(c(0,1,2),N,c(0.5,0.3,0.2), replace = TRUE) # SNP
# Model parameters
a = 50; be1 = 5; be2 = 8; bg1 = 0.3; bg2 = 0.6; sigma = 2
# Generate response y
y = rnorm(N, mean = a + be1*xe1 + be2*xe2 + bg1*xg1 + bg2*xg2, sd = sigma)
# Identify extremes, here upper and lower 25\% of population
u = quantile(y,probs = 3/4,na.rm=TRUE)
l = quantile(y,probs = 1/4,na.rm=TRUE)
extreme = (y < l) | (y >= u)
# Create the EPS-full data set by setting
# the SNP values of non-extremes to NA
xg1[!extreme] = NA
xg2[!extreme] = NA
xg = as.matrix(cbind(xg1,xg2))
xe = as.matrix(cbind(xe1,xe2))
epsfull.test(y~xe1+xe2,SNP = xg)$p.value
epsfull.test(y~xe,SNP = xg,onebyone=FALSE)$p.value
}
